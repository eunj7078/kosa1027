<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 	
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="springBootTest2.mapper.MemberMapper">
<sql id="baseColumns">
	MEM_NUM, MEM_NAME, MEM_REGI_DATE, 
	MEM_ID, MEM_PW, MEM_PHONE1, MEM_PHONE2, 
	MEM_ADDR, MEM_EMAIL, MEM_GENDER, MEM_BIRTH 
</sql>
<sql id="AutoNum">
	select nvl(max(substr(MEM_NUM, 5)),100000) + 1 from member
</sql>

<select id="numberGenerate" resultType="string">
select concat('kosa', nvl(max(substr(MEM_NUM, 5)), 100000)+1) from member
</select>

<select id="selectAll" resultType="springBootTest2.domain.MemberDTO">
	select MEM_NUM memNum, MEM_NAME memName, MEM_REGI_DATE memRegiDate, 
	MEM_ID memId, MEM_PW memPw, MEM_PHONE1 memPhone1, MEM_PHONE2 memPhone2,
	MEM_ADDR memAddr, MEM_EMAIL memEmail, MEM_GENDER memGender, MEM_BIRTH memBirth 
	from member
</select>
<select id="selectOne" parameterType="string" resultType="springBootTest2.domain.MemberDTO">
	select MEM_NUM memNum, MEM_NAME memName, MEM_REGI_DATE memRegiDate, 
	MEM_ID memId, MEM_PHONE1 memPhone1, MEM_PHONE2 memPhone2, 
	MEM_ADDR memAddr, MEM_EMAIL memEmail, MEM_GENDER memGender, MEM_BIRTH memBirth 
	from member 
	where MEM_NUM = #{memNum}
</select>
<delete id="memberDelete" parameterType="string">
	delete from member where MEM_NUM = #{memNum}
</delete>
<insert id="memberInsert" parameterType="springBootTest2.domain.MemberDTO">
	insert into member(MEM_NUM, MEM_NAME, MEM_REGI_DATE, MEM_ID, MEM_PW, 
MEM_PHONE1, MEM_PHONE2, MEM_ADDR, MEM_EMAIL, MEM_GENDER, MEM_BIRTH)
	values(concat('kosa', (<include refid="AutoNum"/>)), #{memName}, sysdate, #{memId}, #{memPw}
	, #{memPhone1}, #{memPhone2}, #{memAddr}, #{memEmail}, #{memGender}, #{memBirth})
</insert>
<update id="memberUpdate" parameterType="springBootTest2.domain.MemberDTO">
	update member
	set mem_name = #{memName}, MEM_ID = #{memId},
		 mem_phone1 = #{memPhone1}, mem_phone2 = #{memPhone2}, MEM_ADDR = #{memAddr}, mem_email = #{memEmail},
		  MEM_GENDER = #{memGender}, MEM_BIRTH = #{memBirth} 
	where mem_num = #{memNum}
</update>
</mapper>